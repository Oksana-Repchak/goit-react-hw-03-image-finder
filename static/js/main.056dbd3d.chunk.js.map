{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","services/imagesServices.js","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","BASE_URL","API_KEY","a","imageName","currentPage","searchQuery","fetch","response","json","data","hits","api","fetchImagesAPI","Searchbar","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ImageGalleryItemImage","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","Button","fetchImages","Spinner","Spiner","color","height","width","timeout","App","isLoading","error","onChangeQuery","options","imagesServices","then","prevState","catch","finally","prevProps","shouldRenderLoadMoreButton","length","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.056dbd3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2YOmC\",\"Modal\":\"Modal_Modal__3FY84\",\"ImageGalleryItemImage\":\"Modal_ImageGalleryItemImage__25H5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1R5Bq\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2kqUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3924r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2WJG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Loader_Spiner__2croH\"};","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '18966103-245a37f9e820c36a1856c1db9';\n\nasync function fetchImagesAPI({ imageName, currentPage }) {\n  const searchQuery = `?q=${imageName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  try {\n    const response = await fetch(`${BASE_URL}/${searchQuery}`);\n    const data = await response.json();\n    return data.hits;\n  } catch (error) {\n    return error('Some error in fetch');\n  }\n}\n\nconst api = {\n  fetchImagesAPI,\n};\n\nexport default api;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = { imageName: '' };\n\n  handleChange = e => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast('Please enter search query');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            value={this.state.imageName}\n            onChange={this.handleChange}\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={src} alt={alt} className={s.ImageGalleryItemImage} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nimport Modal from '../Modal';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className={s.ImageGalleryItemImage}\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          largeImageUrl={image.largeImageURL}\n          alt={image.tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nclass Button extends Component {\r\n  static propTypes = { fetchImages: PropTypes.func.isRequired };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.fetchImages} className={s.Button}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={s.Spiner}\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport imagesServices from './services/imagesServices';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    currentPage: 1,\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imageName !== this.state.imageName) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = imageName => {\n    this.setState({\n      imageName,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { imageName, currentPage } = this.state;\n    const options = { imageName, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesServices\n      .fetchImagesAPI(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, isLoading, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={this.state.images} />\n\n        {isLoading && <Loader />}\n\n        {shouldRenderLoadMoreButton && (\n          <Button fetchImages={this.fetchImages} />\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__14HQ3\",\"SearchForm\":\"Searchbar_SearchForm__1lzYL\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3lcOZ\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__QTbtG\",\"SearchFormInput\":\"Searchbar_SearchFormInput__20bjZ\"};"],"sourceRoot":""}